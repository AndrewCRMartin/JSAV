/** @preserve 
    JSAV V1.0 06.06.14
    Copyright:  (c) Dr. Andrew C. R. Martin, UCL, 2014
    This program is distributed under the Gnu Public Licence (GPLv2)
*/
function printJSAV(divId,sequences,sortable,width){document.writeln("<div id='"+divId+"'>");document.writeln("<div id='"+divId+"_sortable'>");var html=JSAV_buildSequencesHTML(divId,sequences);document.write(html);document.writeln("</div>");if(sortable){var start=1;var stop=sequences[0].sequence.length;document.writeln("<p></p>");JSAV_buildSlider(divId,stop,width);document.writeln("<form>");var html="<button type='button' onclick='JSAV_sortAndRefreshSequences(\""+divId+"\", sequences)'>Sort</button>";document.writeln(html);document.writeln("</form>")}document.writeln("</div>")}function JSAV_printASequence(id,sequence){var html=JSAV_buildASequenceHTML(id,sequence);document.write(html)}function JSAV_buildASequenceHTML(id,sequence){var tableLineArray=sequence.split("");var tableLine="<tr id='"+id+"'>";tableLine+="<td class='titleCell'>"+id+"</td>";var nResidues=tableLineArray.length;for(var i=0;i<nResidues;i++){var aa=tableLineArray[i];tableLine+="<td class='aa"+aa+"'>"+aa+"</td>"}tableLine+="</td></tr>";return tableLine}function JSAV_buildSlider(divId,seqLen,width){var html="<div id='"+divId+"_slider'></div>";document.writeln(html);document.writeln("<span id='"+divId+"_showrange'></span>");var id=divId+"_slider";var tag="#"+id;$(tag).css("width",width);$(tag).css("margin","10px");$(tag).css("display","block");$(tag).slider({range:true,min:1,max:seqLen,values:[1,seqLen],slide:JSAV_showRange});gStartPos=Array();gStopPos=Array();JSAV_showRange(divId)}function JSAV_showRange(eventOrId,ui){if(ui==null){var tag="#"+eventOrId+"_slider";gStartPos[eventOrId]=$(tag).slider("values",0);gStopPos[eventOrId]=$(tag).slider("values",1);tag="#"+eventOrId+"_showrange";var html="Sort from: "+gStartPos[eventOrId]+" to: "+gStopPos[eventOrId];$(tag).text(html);JSAV_highlightRange(eventOrId,sequences[0].sequence.length,gStartPos[eventOrId]-1,gStopPos[eventOrId]-1)}else{var id=$(this).closest("div").parent().attr("id");var tag="#"+id+"_showrange";gStartPos[id]=ui.values[0];gStopPos[id]=ui.values[1];var html="Sort from: "+gStartPos[id]+" to: "+gStopPos[id];$(tag).text(html);JSAV_highlightRange(id,sequences[0].sequence.length,gStartPos[id]-1,gStopPos[id]-1)}}function JSAV_getRange(divId){var start=gStartPos[divId]-1;var stop=gStopPos[divId]-1;return[start,stop]}function JSAV_buildSequencesHTML(divId,sequences){var html="";html+="<div class='JSAV'>\n";html+="<table border='0'>\n";for(var i=0;i<sequences.length;i++){html+=JSAV_buildASequenceHTML(sequences[i].id,sequences[i].sequence)+"\n"}html+=JSAV_buildMarkerHTML(divId,sequences[0].sequence.length);html+="</table>\n";html+="</div>\n";return html}function JSAV_buildMarkerHTML(divId,seqLen){var html="";html+="<tr class='bottomrow'><td class='titleCell'>Sort Region:</td>";for(var i=0;i<seqLen;i++){var id=divId+"_JSAVMarker"+i;html+="<td id='"+id+"' class='unhighlighted' />&nbsp;</td>"}html+="</tr>\n";return html}function JSAV_FindRealSequenceEnds(seqArray){var seqEnds=[];seqEnds[0]=0;while(seqArray[seqEnds[0]]=="-"||seqArray[seqEnds[0]]==" "){seqEnds[0]++}seqEnds[1]=seqArray.length-1;while(seqArray[seqEnds[1]]=="-"||seqArray[seqEnds[1]]==" "){seqEnds[1]--}return seqEnds}function createArray(length){var arr=new Array(length||0),i=length;if(arguments.length>1){var args=Array.prototype.slice.call(arguments,1);while(i--)arr[length-1-i]=createArray.apply(this,args)}return arr}function JSAV_chooseRepresentative(differenceMatrix){var totalDiffs=[];var nSeqs=differenceMatrix.length;for(var i=0;i<nSeqs;i++){totalDiffs[i]=0;for(var j=0;j<differenceMatrix[i].length;j++){totalDiffs[i]+=differenceMatrix[i][j]}}var lowestDiff=1e6;var representative=-1;for(var i=0;i<nSeqs;i++){if(totalDiffs[i]<lowestDiff){lowestDiff=totalDiffs[i];representative=i}}return representative}function JSAV_findClosestSequences(sequenceIndexes,refSeq,differenceMatrix){var closestSequences=[];var smallestDifference=1e6;for(var i=0;i<sequenceIndexes.length;i++){var thisDifference=differenceMatrix[sequenceIndexes[i]][refSeq];if(thisDifference<smallestDifference){smallestDifference=thisDifference;closestSequences=[];closestSequences.push(sequenceIndexes[i])}else if(thisDifference==smallestDifference){closestSequences.push(sequenceIndexes[i])}}return closestSequences}function JSAV_sortSequences(sequences,start,stop){var sortedSequences=[];var sortedIndexes=[];var nSeqs=sequences.length;var ignoreEnds=false;if(start<0||stop<0||start==0&&stop==sequences[0].sequence.length-1){ignoreEnds=true}var used=[];for(var i=0;i<nSeqs;i++){used[i]=0}var differenceMatrix=JSAV_calcDifferenceMatrix(sequences,start,stop,ignoreEnds);var representative=JSAV_chooseRepresentative(differenceMatrix);sortedIndexes[0]=representative;used[representative]=1;var nSortedSeqs=1;while(nSortedSeqs<nSeqs){var unusedSequences=[];for(var i=0;i<nSeqs;i++){if(!used[i]){unusedSequences.push(i)}}var closestSequencesToLast=JSAV_findClosestSequences(unusedSequences,sortedIndexes[nSortedSeqs-1],differenceMatrix);var closestSequencesToReference=JSAV_findClosestSequences(closestSequencesToLast,sortedIndexes[0],differenceMatrix);var mostSimilar=closestSequencesToReference[0];sortedIndexes[nSortedSeqs++]=mostSimilar;used[mostSimilar]=1}for(var i=0;i<nSeqs;i++){sortedSequences[i]=sequences[sortedIndexes[i]]}return sortedSequences}function JSAV_calcDifferenceMatrix(sequences,start,stop,ignoreEnds){var nSeq=sequences.length;var differenceMatrix=createArray(nSeq,nSeq);for(var i=0;i<nSeq;i++){for(var j=0;j<nSeq;j++){differenceMatrix[i][j]=JSAV_calcDifference(sequences[i].sequence,sequences[j].sequence,start,stop,ignoreEnds)}}return differenceMatrix}function JSAV_calcDifference(seq1,seq2,regionStart,regionStop,ignoreEnds){var seqArray1=[];seq1.substring(regionStart,regionStop+1).split("");var seqArray2=[];if(regionStart<0||regionStop<0){seqArray1=seq1.split("");seqArray2=seq2.split("")}else{seqArray1=seq1.substring(regionStart,regionStop+1).split("");seqArray2=seq2.substring(regionStart,regionStop+1).split("")}var differences=0;var seqLen=Math.max(seqArray1.length,seqArray2.length);var start=0;var stop=seqLen-1;if(ignoreEnds){var seq1Ends=JSAV_FindRealSequenceEnds(seqArray1);var seq2Ends=JSAV_FindRealSequenceEnds(seqArray2);start=Math.max(seq1Ends[0],seq2Ends[0]);stop=Math.min(seq1Ends[1],seq2Ends[1])}for(var i=start;i<=stop;i++){if(seqArray1[i]!=seqArray2[i]){differences++}}return differences}function JSAV_sortAndRefreshSequences(divId,sequences){var id=divId+"_JSAVStart";var range=JSAV_getRange(divId);var sortedSequences=JSAV_sortSequences(sequences,range[0],range[1]);var html=JSAV_buildSequencesHTML(divId,sortedSequences);var element=document.getElementById(divId+"_sortable");element.innerHTML=html;JSAV_highlightRange(divId,sequences[0].sequence.length,range[0],range[1]);return false}function JSAV_highlightRange(divId,seqLen,start,stop){for(var i=0;i<seqLen;i++){var id=divId+"_JSAVMarker"+i;document.getElementById(id).className="unhighlighted"}if(start>=0&&stop>=0){for(var i=start;i<=stop;i++){var id=divId+"_JSAVMarker"+i;document.getElementById(id).className="highlighted"}}}